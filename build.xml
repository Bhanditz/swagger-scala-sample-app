<?xml version="1.0"?>
<project name="swagger-sample-app" xmlns:ivy="antlib:org.apache.ivy.ant" default="build.all" basedir=".">
	<property environment="env" />
	<property name="version.identifier" value="1.0" />
    <property name="artifact.ext" value="jar" />
    <property name="organization" value="wordnik" />
    <property name="rule.path" value="dist/data" />
    <property environment="env" />
    <property name="module" value="${ant.project.name}" />
    <property name="swagger_ui_path" value="../swagger-ui"/>
    
	<condition property="scala.home" value="${env.SCALA_HOME}">
		<isset property="env.SCALA_HOME" />
	</condition>

	<path id="scala.classpath">
		<fileset dir="${scala.home}/lib">
			<include name="scala**.jar" />
		</fileset>
	</path>

    <ivy:settings file="ivysettings.xml" />
    <ivy:buildnumber organisation="${organization}" module="${module}" revision="${version.identifier}" />

    <taskdef resource="scala/tools/ant/antlib.xml">
        <classpath>
                <fileset dir="lib">
                    <include name="scala**.jar" />
                </fileset>
             <fileset dir="${scala.home}/lib">
                    <include name="scala**.jar" />
                </fileset>
         </classpath>
    </taskdef>

	<!-- this is the output module -->
	<property name="module" value="${ant.project.name}" />


	<target name="build.all" depends="clean, resolve, fastcompile"
		description="builds the module (default target)" />
	
	<target name="clean" description="cleans the project folder">
		<mkdir dir="build" />
		<echo message="deleting build files" />
		<delete quiet="true">
			<fileset dir="build">
				<include name="*.jar" />
				<include name="*.xml" />
			</fileset>
		</delete>

		<delete dir="build/main" quiet="true" />

		<delete dir="dist" quiet="true" />

		<!-- libraries handled by ivy -->
		<echo message="deleting libs handled by ivy" />
		<delete>
			<fileset dir="lib">
				<include name="*.jar" />
				<include name="*.zip" />
			</fileset>
		</delete>
	</target>
	
	<!-- copies ONLY the swagr-sample jar to dist-->
	<target name="fastdist" depends="fastcompile">
		<copy todir="dist/lib">
			<fileset dir="build">
				<include name="*.jar"/>
			</fileset>
		</copy>
	</target>
	
	<!-- copies all dependencies into the lib folder -->
	<target name="resolve" description="retreive dependencies with ivy">
		<ivy:retrieve pattern="${basedir}/lib/[artifact]-[revision].[ext]" conf="build" />
	</target>

	<target name="server.start">
		<delete quiet="true" file="dist/logs/wordnik.log"/>
		<java jar="dist/start.jar" fork="true" spawn="true" dir="dist">
			<sysproperty key="START" value="conf/start.config"/>
			<sysproperty key="STOP.PORT" value="8079"/>
			<sysproperty key="STOP.KEY" value="stopit"/>
			<arg value="conf/jetty.xml"/>
		</java>
		<waitfor maxwait="30" maxwaitunit="second" checkevery="500">
			<available file="logs/wordnik.log"/>
		</waitfor>
	</target>

	<target name="server.stop">
		<java jar="dist/start.jar" fork="true">
			<sysproperty key="START" value="conf/start.config"/>
			<sysproperty key="STOP.PORT" value="8079"/>
			<sysproperty key="STOP.KEY" value="stopit"/>
			<arg value="--stop"/>
		</java>
	</target>

	<target name="fastcompile" description="builds the module without artifact resolution or cleaning" >
		<delete quiet="true" file="build/${organization}-${artifact}-*.${artifact.ext}" />
		<mkdir dir="build" />
		<mkdir dir="build/main" />
		<mkdir dir="build/main/java" />

		<scalac srcdir="src/main/scala" destdir="build/main/java">
			<classpath>
				<fileset dir="lib">
					<include name="*.jar" />
				    <exclude name="*compat-jbossweb*.jar"/>
				    <exclude name="*compat-tomcat*.jar"/>
				    <exclude name="*compat-weblogic*.jar"/>
				</fileset>
				<fileset dir="lib/ext">
					<include name="*.jar" />
				</fileset>
				<path refid="scala.classpath" />
			</classpath>
			<include name="**/*.scala" />
			<include name="**/*.java" />
		</scalac>

		<javac srcdir="src/main/scala" debug="true" destdir="build/main/java">
			<classpath>
				<fileset dir="lib">
					<include name="*.jar" />
				    <exclude name="*compat-jbossweb*.jar"/>
				    <exclude name="*compat-tomcat*.jar"/>
				    <exclude name="*compat-weblogic*.jar"/>
				</fileset>
				<fileset dir="lib/ext">
					<include name="*.jar" />
				</fileset>
				<pathelement location="build/main/java" />
			</classpath>
		</javac>
		<jar jarfile="build/${module}-${ivy.new.revision}.${artifact.ext}">
			<fileset dir="build/main/java" />
		</jar>
	</target>

	<!-- cleans up the dist -->
	<target name="dist.clean">
		<delete quiet="true" dir="dist"/>
		<delete quiet="true" file="dist.zip"/>
	</target>

	<!-- creates a distribution of the api server -->
	<target name="dist" depends="build.all">
		<!-- make dist -->
		<delete dir="dist"/>

		<mkdir dir="dist"/>
		<mkdir dir="dist/lib"/>
		<mkdir dir="dist/logs"/>

		<!-- copy jetty start -->
		<copy tofile="dist/start.jar">
			<fileset dir="lib">
				<include name="*start*.jar"/>
			</fileset>
		</copy>

		<!-- copy all jars -->
		<copy todir="dist/lib">
			<fileset dir="lib">
				<include name="*.jar"/>
			</fileset>
			<fileset dir="build">
				<include name="*.jar"/>
			</fileset>
		</copy>
		<copy todir="dist/lib">
			<fileset dir="lib/ext"/>
		</copy>

		<!-- create webapps and work folder -->
		<mkdir dir="dist/webapps"/>
		<mkdir dir="dist/work"/>

		<!-- copy conf files to webapps -->
		<mkdir dir="dist/webapps/swagger-sample-app"/>
		<mkdir dir="dist/webapps/swagger-sample-app/WEB-INF"/>
		<mkdir dir="dist/webapps/swagger-sample-app/WEB-INF/classes"/>
		<mkdir dir="dist/webapps/swagger-sample-app/WEB-INF/lib"/>

		<mkdir dir="dist/conf"/>
		<copy todir="dist/conf" file="conf/log4j.properties"/>

		<copy todir="dist/webapps/swagger-sample-app/WEB-INF">
			<fileset dir="conf/web"/>
		</copy>

        <copy todir="dist/webapps/swagger-sample-app">
            <fileset dir="${swagger_ui_path}/src/main/html"/>
        </copy>
        

		<!-- copy bin files -->
		<copy todir="dist/bin">
			<fileset dir="bin"/>
		</copy>

		<chmod perm="a+x">
			<fileset dir="dist/bin">
				<include name="*.sh"/>
			</fileset>
		</chmod>

		<!-- copy jetty start file -->
		<mkdir dir="conf"/>
		<copy todir="dist/conf" file="conf/jetty/jetty.xml"/>
		<copy todir="dist/conf" file="conf/jetty/webdefault.xml"/>
		
		<copy todir="dist/conf" file="conf/jetty/start.config"/>

		<!-- clean up old dists -->
		<delete quiet="true">
			<fileset dir=".">
				<include name="swagger-sample-app-*.zip"/>
			</fileset>
		</delete>

		<zip destfile="swagger-sample-app-${ivy.new.revision}.zip">
			<zipfileset dir="dist" includes="**/*"/>
		</zip>
		<copy todir="build">
			<fileset dir=".">
				<include name="swagger-*.zip"/>
			</fileset>
		</copy>
	</target>

    <target name="deploy" depends="dist">
            <echo message="building pom file"/>
            <property name="ivy.pom.version" value="${ivy.new.revision}"/>
            <ivy:makepom ivyfile="ivy.xml" pomfile="build/${module}-${ivy.new.revision}.pom"/>

            <echo message="publishing module ${module}" />
            <ivy:publish resolver="local" organisation="${organization}" conf="source,test,build,pom,common" pubrevision="${ivy.new.revision}" overwrite="false">
                    <artifacts pattern="build/[artifact]-[revision].[ext]" />
            </ivy:publish>
            <echo message="project ${module} published locally with version lib/${ivy.new.revision}" />
    </target>

	<target name="dependency.tree" description="builds a dependency diagram">
 		<ivy:report conf="build" graph="true" todir="." outputpattern="[artifact]-[revision].[ext]" />
	</target>
</project>
